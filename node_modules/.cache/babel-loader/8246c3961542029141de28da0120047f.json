{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAHIR\\\\Desktop\\\\Web projects\\\\PROJECTS\\\\Fullstack projects\\\\UxerDL Alx\\\\Fullstack webpack\\\\frontend\\\\src\\\\components\\\\Upload.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [fileName, setFileName] = useState('');\n  const [bookName, setBookName] = useState('');\n  const [bookCategory, setBookCategory] = useState('');\n  const [bookDescription, seBookDescription] = useState('');\n  const [UploaderName, setUploaderName] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async e => {\n    /* A function that send both book and info to the books\r\n    folder and the database*/\n    console.log(\"Handle Submit function clicked\");\n    const Data = {\n      fileName,\n      bookName,\n      bookCategory,\n      bookDescription,\n      UploaderName\n    };\n    e.preventDefault();\n    const response = await fetch('/', {\n      body: Data,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n    }\n\n    if (response) {\n      setFileName('');\n      setBookName('');\n      setBookCategory('');\n      setBookDescription('');\n      setUploadName('');\n      setError(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"uploadForm\",\n    onsubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"fileName\",\n      children: \"Enter file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"fileName\",\n      className: \"fileName\",\n      placeholder: \"Please select from your drive\",\n      onChange: e => setFileName(e.target.value),\n      value: fileName,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"bookName\",\n      className: \"bookName\",\n      placeholder: \"Enter name of book\",\n      onChange: e => setBookName(e.target.value),\n      value: bookName,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setBookCategory(e.target.value),\n      value: bookCategory,\n      name: \"bookCategory\",\n      className: \"bookCategory\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"bookCategory\",\n        children: \"Book category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Science\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Art\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Novel/Novella\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Book description\",\n      name: \"bookDescription\",\n      className: \"bookDescription\",\n      onChange: e => setBookDescription(e.target.value),\n      value: bookDescription,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"UploaderName\",\n      className: \"UploaderName\",\n      placeholder: \"Uploader's name\",\n      onChange: e => setUploaderName(e.target.value),\n      value: UploaderName,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      name: \"submitButton\",\n      className: \"submitButton\",\n      value: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"GDgZ69gxycE+4cpgGG/+W38KUOM=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","Upload","fileName","setFileName","bookName","setBookName","bookCategory","setBookCategory","bookDescription","seBookDescription","UploaderName","setUploaderName","error","setError","handleSubmit","e","console","log","Data","preventDefault","response","fetch","body","headers","json","ok","setBookDescription","setUploadName","target","value"],"sources":["C:/Users/MAHIR/Desktop/Web projects/PROJECTS/Fullstack projects/UxerDL Alx/Fullstack webpack/frontend/src/components/Upload.js"],"sourcesContent":["import { useState } from \"react\";\r\nconst Upload = () => {\r\n    \r\n    const [fileName, setFileName] = useState('')\r\n    const [bookName, setBookName] = useState('')\r\n    const [bookCategory, setBookCategory] = useState('')\r\n    const [bookDescription, seBookDescription] = useState('')\r\n    const [UploaderName, setUploaderName] = useState('')\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleSubmit = async (e) => {\r\n        /* A function that send both book and info to the books\r\n        folder and the database*/\r\n        console.log(\"Handle Submit function clicked\");\r\n\r\n        const Data = { fileName,\r\n                        bookName,\r\n                        bookCategory,\r\n                        bookDescription,\r\n                        UploaderName\r\n                    }\r\n\r\n        e.preventDefault();\r\n        const response = await fetch('/',{\r\n            body : Data,\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        })\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setError(json.error)\r\n        }\r\n        if (response) {\r\n            setFileName('')\r\n            setBookName('')\r\n            setBookCategory('')\r\n            setBookDescription('')\r\n            setUploadName('')\r\n            setError(null)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form className=\"uploadForm\" onsubmit={handleSubmit}>\r\n            <label for=\"fileName\">Enter file</label>\r\n            <input\r\n                type=\"file\"\r\n                name = \"fileName\"\r\n                className = \"fileName\"\r\n                placeholder = \"Please select from your drive\"\r\n                onChange={(e) => setFileName(e.target.value)}\r\n                value={fileName}\r\n                required\r\n            />\r\n\r\n            <input\r\n                type=\"text\"\r\n                name = \"bookName\"\r\n                className = \"bookName\"\r\n                placeholder = \"Enter name of book\"\r\n                onChange={(e) => setBookName(e.target.value)}\r\n                value={bookName}\r\n                required\r\n            />\r\n\r\n            <select onChange={(e) => setBookCategory(e.target.value)}\r\n            value={bookCategory}name = \"bookCategory\"\r\n            className = \"bookCategory\"\r\n            required>\r\n                <label for =\"bookCategory\">Book category</label>\r\n                <option>Science</option>\r\n                <option>Art</option>\r\n                <option>Novel/Novella</option>\r\n            </select>\r\n\r\n            <textarea\r\n                placeholder=\"Book description\"\r\n                name=\"bookDescription\"\r\n                className=\"bookDescription\"\r\n                onChange={(e) => setBookDescription(e.target.value)}\r\n                value={bookDescription}\r\n                required\r\n            ></textarea>\r\n            <input\r\n                type=\"text\"\r\n                name = \"UploaderName\"\r\n                className = \"UploaderName\"\r\n                placeholder = \"Uploader's name\"\r\n                onChange={(e) => setUploaderName(e.target.value)}\r\n                value={UploaderName}\r\n                required\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                name = \"submitButton\"\r\n                className = \"submitButton\"\r\n                value = \"Upload\"\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module"}